name: 'handicap management endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/handicaps
    metadata:
      title: 'Show the list of all handicap'
      description: 'showing a list of the handicap with all their info needed to recognize them in the system'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":16,"fullname":"Dr. Alexandre Feest V","adress":"8422 Prosacco Circle Apt. 318\nPort Buckport, IA 80576","mobile_number":"1-408-973-9723","year_of_birth":"2021","ecocash_number":110022211,"lumicash_number":110022211,"bank_name":"Rolfson Coves","bank_account_number":6844845,"story":"Odit temporibus non dolorem provident dolor. Cupiditate omnis libero numquam quidem nesciunt quas modi. Aperiam voluptatem repudiandae enim ea et reiciendis.","needed_money":3233033,"state_of_health":"bad","images":{"main_image":"https:\/\/via.placeholder.com\/640x480.png\/00ccaa?text=molestias","first_primary_image":"https:\/\/via.placeholder.com\/640x480.png\/00ffee?text=cum","second_primary_image":"https:\/\/via.placeholder.com\/640x480.png\/006622?text=ut"},"donation_status":"en cours","user":3,"family_situation":"orphelins"},{"id":17,"fullname":"Enola O''Connell","adress":"468 Dicki Trail\nNorth Alanaborough, IN 07703-8148","mobile_number":"+18083970708","year_of_birth":"2001","ecocash_number":110022211,"lumicash_number":110022211,"bank_name":"Pablo Run","bank_account_number":5633246,"story":"Sunt placeat dolor labore culpa. Fugiat esse ducimus architecto placeat ut nihil. Qui vero placeat rerum.","needed_money":3549525,"state_of_health":"bad","images":{"main_image":"https:\/\/via.placeholder.com\/640x480.png\/00cc77?text=ullam","first_primary_image":"https:\/\/via.placeholder.com\/640x480.png\/00bb99?text=amet","second_primary_image":"https:\/\/via.placeholder.com\/640x480.png\/00eebb?text=architecto"},"donation_status":"en cours","user":10,"family_situation":"orphelins"}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/handicaps
    metadata:
      title: 'add new handicap in the database'
      description: 'call this endpoint to store new handicap based on the given data'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'the fullname of the handicap'
        required: true
        example: aut
        type: string
        custom: []
      adress:
        name: adress
        description: 'the adress of the handicap'
        required: true
        example: voluptas
        type: string
        custom: []
      mobile_number:
        name: mobile_number
        description: 'the mobile number of the handicap or his host'
        required: true
        example: corrupti
        type: string
        custom: []
      year_of_birth:
        name: year_of_birth
        description: 'the year of birth for the handicap'
        required: true
        example: 6
        type: integer
        custom: []
      ecocash_number:
        name: ecocash_number
        description: 'the ecocash number of the handicap'
        required: false
        example: 1
        type: integer
        custom: []
      lumicash_number:
        name: lumicash_number
        description: 'Must be at least 6 characters.'
        required: false
        example: dni
        type: string
        custom: []
      bank_name:
        name: bank_name
        description: 'the name of the bank used by the handicap'
        required: false
        example: porro
        type: string
        custom: []
      bank_account_number:
        name: bank_account_number
        description: 'the number of the bank account used by the handicap'
        required: false
        example: et
        type: string
        custom: []
      story:
        name: story
        description: 'the story of the handicap'
        required: true
        example: quia
        type: string
        custom: []
      needed_money:
        name: needed_money
        description: 'the amount of money for the operation'
        required: true
        example: 10
        type: integer
        custom: []
      state_of_health:
        name: state_of_health
        description: 'the health of the patient can take those values (simple, bad, worst)'
        required: true
        example: ut
        type: string
        custom: []
      main_image:
        name: main_image
        description: 'the most important picture of the handicap'
        required: true
        example: minus
        type: string
        custom: []
      first_primary_image:
        name: first_primary_image
        description: 'just another picture of the handicap'
        required: false
        example: aperiam
        type: string
        custom: []
      second_primary_image:
        name: second_primary_image
        description: 'just another picture of the handicap the second one'
        required: false
        example: ut
        type: string
        custom: []
      user_id:
        name: user_id
        description: 'the id of the user who gonna add the handicap'
        required: true
        example: 8
        type: integer
        custom: []
      family_situation:
        name: family_situation
        description: 'the state of his familly situation (orphans or with parents)'
        required: true
        example: dolorem
        type: string
        custom: []
      lumitel_number:
        name: lumitel_number
        description: 'the lumicash number of the handicap'
        required: false
        example: 1
        type: integer
        custom: []
      donation_status:
        name: donation_status
        description: 'just the status of the donation process (not started, in progress, done)'
        required: false
        example: sed
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {'success' => 'true',
                'data' => [
                     'message' => 'handicap created successfuly'
               ]}
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/handicaps/{id}'
    metadata:
      title: 'show one handicap'
      description: 'returns one handicap found using the id provided in the request query'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the handicap.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":18,"fullname":"Genevieve Hahn","adress":"283 McDermott Springs Apt. 852\nMcKenziehaven, TX 68216-6351","mobile_number":"+1-747-857-8073","year_of_birth":"2002","ecocash_number":110022211,"lumicash_number":110022211,"bank_name":"Gaylord Locks","bank_account_number":6486774,"story":"Omnis eveniet harum dicta quasi est assumenda optio. Reiciendis et praesentium ab molestiae. Dolor quos delectus distinctio non ut inventore unde. Rerum consequatur consequuntur quia porro.","needed_money":3182255,"state_of_health":"bad","images":{"main_image":"https:\/\/via.placeholder.com\/640x480.png\/0022aa?text=hic","first_primary_image":"https:\/\/via.placeholder.com\/640x480.png\/0000ee?text=accusantium","second_primary_image":"https:\/\/via.placeholder.com\/640x480.png\/002233?text=autem"},"donation_status":"en cours","user":9,"family_situation":"orphelins"}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/handicaps/{id}'
    metadata:
      title: 'Update the handicap'
      description: 'update the handicap related data'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the handicap.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'the fullname of the handicap'
        required: true
        example: ut
        type: string
        custom: []
      adress:
        name: adress
        description: 'the adress of the handicap'
        required: true
        example: aut
        type: string
        custom: []
      mobile_number:
        name: mobile_number
        description: 'the mobile number of the handicap or his host'
        required: true
        example: fuga
        type: string
        custom: []
      year_of_birth:
        name: year_of_birth
        description: 'the year of birth for the handicap'
        required: true
        example: 5
        type: integer
        custom: []
      ecocash_number:
        name: ecocash_number
        description: 'the ecocash number of the handicap'
        required: false
        example: 13
        type: integer
        custom: []
      lumicash_number:
        name: lumicash_number
        description: 'Must be at least 6 characters.'
        required: false
        example: mj
        type: string
        custom: []
      bank_name:
        name: bank_name
        description: 'the name of the bank used by the handicap'
        required: false
        example: quod
        type: string
        custom: []
      bank_account_number:
        name: bank_account_number
        description: 'the number of the bank account used by the handicap'
        required: false
        example: quidem
        type: string
        custom: []
      story:
        name: story
        description: 'the story of the handicap'
        required: true
        example: cumque
        type: string
        custom: []
      needed_money:
        name: needed_money
        description: 'the amount of money for the operation'
        required: true
        example: 1
        type: integer
        custom: []
      state_of_health:
        name: state_of_health
        description: 'the health of the patient can take those values (simple, bad, worst)'
        required: true
        example: accusamus
        type: string
        custom: []
      main_image:
        name: main_image
        description: 'the most important picture of the handicap'
        required: true
        example: aut
        type: string
        custom: []
      first_primary_image:
        name: first_primary_image
        description: 'just another picture of the handicap'
        required: false
        example: fuga
        type: string
        custom: []
      second_primary_image:
        name: second_primary_image
        description: 'just another picture of the handicap the second one'
        required: false
        example: veniam
        type: string
        custom: []
      user_id:
        name: user_id
        description: 'the id of the user who gonna add the handicap'
        required: true
        example: 5
        type: integer
        custom: []
      family_situation:
        name: family_situation
        description: 'the state of his familly situation (orphans or with parents)'
        required: true
        example: et
        type: string
        custom: []
      lumitel_number:
        name: lumitel_number
        description: 'the lumicash number of the handicap'
        required: false
        example: 3
        type: integer
        custom: []
      donation_status:
        name: donation_status
        description: 'just the status of the donation process (not started, in progress, done)'
        required: false
        example: rerum
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {'success' => 'true',
                'data' => [
                     'message' => 'successfuly updated the handicap data'
               ]}
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/handicaps/{id}'
    metadata:
      title: 'delete the handicap data'
      description: 'delete the handicap data from the database'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the handicap.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 201
        content: |-
          {'success' => 'true',
                'data' => [
                     'message' => 'successfuly deleted the handicap data'
               ]}
        headers: []
        description: '201'
    responseFields: []
