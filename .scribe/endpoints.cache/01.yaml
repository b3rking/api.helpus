## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Users management endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'show all users'
      description: |-
        see all user with they info and everything relate to them
        this is not the handicap data it's only users data
        like admins or simple user.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":20,"fullname":"Ludie Stokes","username":"Camron","role":"Insurance Investigator","adress":"6514 Braun Walk\nSteuberburgh, IL 78009-7254","number":76507092,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/001144?text=+autem"},{"id":21,"fullname":"Lamont Hill DVM","username":"Charles","role":"Event Planner","adress":"116 Annabell Hollow Apt. 602\nTorpview, AL 07775","number":72178055,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/0044ee?text=+ut"}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Store a new user'
      description: |-
        this endpoint store a new user based on the data passed in the request
        <aside class="notice">make sure to pass all the the required data</aside>
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'this user fullname'
        required: true
        example: qui
        type: string
        custom: []
      username:
        name: username
        description: 'this user username'
        required: true
        example: quibusdam
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'this user role in the system'
        required: false
        example: 1
        type: integer
        custom: []
      password:
        name: password
        description: 'this user role in the system'
        required: true
        example: aliquid
        type: string
        custom: []
      adress:
        name: adress
        description: 'this user adress'
        required: false
        example: pariatur
        type: string
        custom: []
      number:
        name: number
        description: 'this user mobile number'
        required: false
        example: 18
        type: integer
        custom: []
      avatar:
        name: avatar
        description: 'this user avatar link'
        required: false
        example: vitae
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          'status' => 'ok',
          'data' => [
          'message' => 'successfuly created the account'
          ]
            }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'show one user'
      description: 'endpoint which returns the data of the specified with all his data.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user'
        required: true
        example: 4
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":22,"fullname":"Prof. Edmund Vandervort","username":"Ramon","role":"Insurance Investigator","adress":"8115 Lyla Extensions\nRolfsontown, MD 22991-2342","number":75276074,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/000055?text=+vitae"}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'Update a user.'
      description: 'endpoint to update one user'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user to update'
        required: true
        example: 3
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'this user fullname'
        required: true
        example: rerum
        type: string
        custom: []
      username:
        name: username
        description: 'this user username'
        required: true
        example: similique
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'this user role in the system'
        required: false
        example: 3
        type: integer
        custom: []
      password:
        name: password
        description: 'this user role in the system'
        required: true
        example: voluptatum
        type: string
        custom: []
      adress:
        name: adress
        description: 'this user adress'
        required: false
        example: similique
        type: string
        custom: []
      number:
        name: number
        description: 'this user mobile number'
        required: false
        example: 16
        type: integer
        custom: []
      avatar:
        name: avatar
        description: 'this user avatar link'
        required: false
        example: esse
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          'status' => 'ok',
          'data' => [
          'message' => 'successfuly updated the account'
          ]
            }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'Remove the specified user'
      description: 'endpoint to remove the user with given id'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user to delete'
        required: true
        example: 2
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          'status' => 'ok',
          'response' => [
          'message' => 'successfuly deleted the account'
          ]
          }
        headers: []
        description: '200'
    responseFields: []
