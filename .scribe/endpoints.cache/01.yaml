## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Users management endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'show all users'
      description: |-
        see all user with they info and everything relate to them
        this is not the handicap data it's only users data
        like admins or simple user.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"fullname":"Ernie Pfeffer","username":"Manley","role":"Building Cleaning Worker","adress":"985 Ward Shoal Apt. 802\nPort Marina, CO 96684-1757","number":75825108,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00ff44?text=+dolores"},{"id":12,"fullname":"Emilia Stoltenberg","username":"Kim","role":"Food Preparation and Serving Worker","adress":"105 Arlo Springs\nNew Laverna, PA 49156","number":79004147,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00dd44?text=+saepe"}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Store a new user'
      description: |-
        this endpoint store a new user based on the data passed in the request
        <aside class="notice">make sure to pass all the the required data</aside>
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'this user fullname'
        required: true
        example: impedit
        type: string
        custom: []
      username:
        name: username
        description: 'this user username'
        required: true
        example: consectetur
        type: string
        custom: []
      password:
        name: password
        description: 'this user role in the system'
        required: true
        example: vel
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'this user role in the system'
        required: false
        example: 10
        type: integer
        custom: []
      adress:
        name: adress
        description: 'this user adress'
        required: false
        example: accusantium
        type: string
        custom: []
      number:
        name: number
        description: 'this user mobile number'
        required: false
        example: 6
        type: integer
        custom: []
      avatar:
        name: avatar
        description: 'this user avatar link'
        required: false
        example: ratione
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
                'success' => 'true',
                'data' => [
                    'message' => 'successfuly created the account'
               ]
            }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'show one user'
      description: 'endpoint which returns the data of the specified with all his data.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user'
        required: true
        example: 4
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":13,"fullname":"Mr. Giuseppe Dicki DDS","username":"Dawson","role":"Food Preparation and Serving Worker","adress":"5158 Sawayn Inlet Suite 212\nEast Aileen, NE 19296-7408","number":70424282,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00aabb?text=+ut"}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'Update a user.'
      description: 'endpoint to update one user'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user to update'
        required: true
        example: 15
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'this user fullname'
        required: true
        example: dolorem
        type: string
        custom: []
      username:
        name: username
        description: 'this user username'
        required: true
        example: qui
        type: string
        custom: []
      password:
        name: password
        description: 'this user role in the system'
        required: true
        example: iusto
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'this user role in the system'
        required: false
        example: 8
        type: integer
        custom: []
      adress:
        name: adress
        description: 'this user adress'
        required: false
        example: dolorum
        type: string
        custom: []
      number:
        name: number
        description: 'this user mobile number'
        required: false
        example: 6
        type: integer
        custom: []
      avatar:
        name: avatar
        description: 'this user avatar link'
        required: false
        example: aut
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
                'success' => 'true',
                'data' => [
                    'message' => 'successfuly updated the account'
                ]
            }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'Remove the specified user'
      description: 'endpoint to remove the user with given id'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user to delete'
        required: true
        example: 11
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                'success' => 'true',
                'response' => [
                    'message' => 'successfuly deleted the account'
                ]
                }
        headers: []
        description: '200'
    responseFields: []
