## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Users management endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'show all users'
      description: |-
        see all user with they info and everything relate to them
        this is not the handicap data it's only users data
        like admins or simple user.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":18,"fullname":"Nettie Rodriguez","username":"Travon","role":"admin","adress":"76828 Kyra Station Suite 855\nNorth Daniella, NH 02738-6666","number":72688862,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/008833?text=+autem"},{"id":19,"fullname":"Brendan Swaniawski","username":"Buster","role":"admin","adress":"508 Berge Route Apt. 886\nEmilieport, AL 06023-8746","number":79159027,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/0088cc?text=+est"}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Store a new user'
      description: |-
        this endpoint store a new user based on the data passed in the request
        <aside class="notice">make sure to pass all the the required data</aside>
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'this user fullname'
        required: true
        example: praesentium
        type: string
        custom: []
      username:
        name: username
        description: 'this user username'
        required: true
        example: saepe
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'this user role in the system'
        required: false
        example: 8
        type: integer
        custom: []
      password:
        name: password
        description: 'this user role in the system'
        required: true
        example: laudantium
        type: string
        custom: []
      adress:
        name: adress
        description: 'this user adress'
        required: false
        example: id
        type: string
        custom: []
      number:
        name: number
        description: 'this user mobile number'
        required: false
        example: 20
        type: integer
        custom: []
      avatar:
        name: avatar
        description: 'this user avatar link'
        required: false
        example: odio
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          'status' => 'ok',
          'data' => [
          'message' => 'successfuly created the account'
          ]
            }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'show one user'
      description: 'endpoint which returns the data of the specified with all his data.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user'
        required: true
        example: 17
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":20,"fullname":"Heath Bayer","username":"Marcelino","role":"Immigration Inspector OR Customs Inspector","adress":"9612 Kris Spurs Suite 130\nHarrytown, TX 09337-2955","number":77763811,"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00aa22?text=+quidem"}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'Update a user.'
      description: 'endpoint to update one user'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user to update'
        required: true
        example: 6
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      fullname:
        name: fullname
        description: 'this user fullname'
        required: true
        example: voluptas
        type: string
        custom: []
      username:
        name: username
        description: 'this user username'
        required: true
        example: omnis
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'this user role in the system'
        required: false
        example: 7
        type: integer
        custom: []
      password:
        name: password
        description: 'this user role in the system'
        required: true
        example: aspernatur
        type: string
        custom: []
      adress:
        name: adress
        description: 'this user adress'
        required: false
        example: voluptate
        type: string
        custom: []
      number:
        name: number
        description: 'this user mobile number'
        required: false
        example: 3
        type: integer
        custom: []
      avatar:
        name: avatar
        description: 'this user avatar link'
        required: false
        example: voluptatibus
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          'status' => 'ok',
          'data' => [
          'message' => 'successfuly updated the account'
          ]
            }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'Remove the specified user'
      description: 'endpoint to remove the user with given id'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'id of the user to delete'
        required: true
        example: 7
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          'status' => 'ok',
          'response' => [
          'message' => 'successfuly deleted the account'
          ]
          }
        headers: []
        description: '200'
    responseFields: []
